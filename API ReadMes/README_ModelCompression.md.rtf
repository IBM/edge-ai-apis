{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 IBMPlexSerif;\f2\ftech\fcharset77 Symbol;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww21020\viewh14040\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Edge AI Model Compression Overview\
\
In edge computing, there are many applications where e
\f1 dge devices may be resource constrained, for example \'97  power, memory, storage, compute or network.  As machine learning or deep learning models become more complex with time, inferencing at the edge of networks requires model fine tuning.\
\pard\pardeftab720\ri0\partightenfactor0
\cf0 \
Model pruning \'96 model size reduction \'96 pruning least important weights while keeping the most important neurons\
\
Model quantization \'96 \
\pard\pardeftab720\li720\fi-360\ri0\sl312\slmult1\sa160\partightenfactor0
\ls1\ilvl0
\f2\fs20 \cf0 \'a5	
\f1 Models are usually represented as multi-dimensional arrays of 32-bit and 64-bit floats \
\ls1\ilvl0
\f2 \'a5	
\f1 Reduce granularity to 16-bit floats, or 8-bit integers; Go as far as 4-bit and even 1-bit\
\ls1\ilvl0
\f2 \'a5	
\f1 Candidates for quantization \'96 Weights; Biases (though not recommended); Activations/Outputs\
\ls1\ilvl0
\f2 \'a5	
\f1 Tradeoff between Accuracy, Storage, Space, Memory\
\pard\pardeftab720\ri0\partightenfactor0

\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \
\
\
\
\
## Version 1.0 APIs\
The following are API services offered for version 1.0:\
\
Methods for Model Optimization API.\
\
REST APIs are using an HTTP post method to invoke the backend Coreset service. The payload of the post method has a multipart/form-data format in which form is used to pass arguments and file is used to pass data. \
\
In the following, a sample is given for each method in python syntax. \
\
}